---
- hosts: all
  become: true

  roles:
    - geerlingguy.repo-epel

  tasks:
  - name: Add server to /etc/hosts
    lineinfile:
      dest: /etc/hosts
      line: '10.0.0.10	auth.example.org auth'
      state: present

  - name: Add client to /etc/hosts
    lineinfile:
      dest: /etc/hosts
      line: '10.0.0.100	somebox.example.org somebox'
      state: present

  - name: Install LDAP client
    package:
      name: openldap-clients
      state: present


- hosts: auth
  become: true

  tasks:
  - name: Install openldap server
    package:
      name: openldap-servers
      state: present

  - name: Start LDAP service
    service:
      name: slapd
      state: started
      enabled: true

  - name: Install Python LDAP support
    package:
      name: python-ldap
      state: present

  - name: Configure LDAP base
    ldap_attr:
      dn: olcDatabase={2}hdb,cn=config
      name: olcSuffix
      values: "dc=example,dc=org"
      state: exact

  - name: Configure LDAP RootDN
    ldap_attr:
      dn: olcDatabase={2}hdb,cn=config
      name: olcRootDN
      values: "cn=admin,dc=example,dc=org"
      state: exact

  - name: Configure LDAP RootDN password
    ldap_attr:
      dn: olcDatabase={2}hdb,cn=config
      name: olcRootPW
      values: "{SSHA}0TtWtaWnyCNw59LLdzAauF8+drxl2olj"
      state: exact

  # May not be the best thing, but since we're configuring with Ansible
  # without this, you'd have to provide auth (base dn/pw) in all of the
  # ldap_entry addition
  # https://serverfault.com/questions/490624/why-cant-i-create-my-first-object-in-my-open-ldap-server
  - name: Allow domain socket write access to LDAP tree
    ldap_attr:
      dn: olcDatabase={2}hdb,cn=config
      name: olcAccess
      values:
      - >-
        {0}to *
         by dn.base="gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth" write
         by * read
      state: exact

  - name: Create top of LDAP tree
    ldap_entry:
      dn: dc=example,dc=org
      objectClass:
        - dcObject
        - organization
      attributes:
        o: example
        dc: example

  - name: Create OU for users
    ldap_entry:
      dn: ou=users,dc=example,dc=org
      objectClass: organizationalUnit

  - name: Create OU for groups
    ldap_entry:
      dn: ou=groups,dc=example,dc=org
      objectClass: organizationalUnit

  - name: Fetch generated self-signed OpenLDAP cert
    command: certutil -L -d /etc/openldap/certs -a -n 'OpenLDAP Server'
    register: openldap_cert
    changed_when: false

  - name: Copy server cert to client
    copy:
      content: "{{ openldap_cert.stdout }}\n"
      dest: /etc/openldap/certs/auth.example.org.pem
      owner: root
      group: root
      mode: 0644
    delegate_to: somebox

- hosts: somebox
  become: true

  tasks:
  - name: Get contents of server cert
    slurp:
      src: /etc/openldap/certs/auth.example.org.pem
    register: servercert

  - name: Check if the server cert is in the cert db
    shell: certutil -L -d /etc/openldap/certs -n 'OpenLDAP Server' -a
    register: certonclient
    changed_when: false
    failed_when: false

  - name: Check trust settings for server cert
    shell: certutil -L -d /etc/openldap/certs | awk '/OpenLDAP Server/ { print $NF }'
    register: trustsettings
    changed_when: false
    when: certonclient.rc == 0

  - name: Remove server cert from trust store if its not correct
    command: certutil -D -d /etc/openldap/certs -n 'OpenLDAP Server'
    when: certonclient.rc == 0 and certonclient.stdout | replace('\n', '')  != servercert['content'] | b64decode | replace('\n', '') 

  - name: Install server cert to client OpenLDAP cert db
    shell: certutil -A -d /etc/openldap/certs -n 'OpenLDAP Server' -t CT -a -i /etc/openldap/certs/auth.example.org.pem
    when: ( certonclient.rc != 0 ) or ( trustsettings.stdout != 'CT,,' )

